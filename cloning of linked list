class Solution {
public:
    Node* copyRandomList(Node* head) {
        if (!head) return nullptr;

        // Step 1: Create new nodes interweaved with original nodes.
        Node* current = head;
        while (current != nullptr) {
            Node* newnode = new Node(current->val);
            newnode->next = current->next;
            current->next = newnode;
            current = newnode->next;
        }

        // Step 2: Assign random pointers for the new nodes.
        current = head;
        while (current != nullptr) {
            if (current->random) {
                current->next->random = current->random->next;
            }
            current = current->next->next;
        }

        // Step 3: Separate the new list from the original list.
        current = head;
        Node* newhead = head->next;
        Node* newcurrent = newhead;
        
        while (current != nullptr) {
            current->next = newcurrent->next;
            current = current->next;
            if (current != nullptr) {
                newcurrent->next = current->next;
                newcurrent = newcurrent->next;
            }
        }

        return newhead;
        
    }
};
